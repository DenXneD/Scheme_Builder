# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'input.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_thread_name_form(QtWidgets.QDialog):
    def __init__(self, root, **kwargs):
        super().__init__(root, **kwargs)
        self.main = root

    def setupUi(self, thread_name_form):
        self.thread_name_form = thread_name_form
        thread_name_form.setObjectName("input_form")
        thread_name_form.resize(150, 75)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(thread_name_form.sizePolicy().hasHeightForWidth())
        thread_name_form.setSizePolicy(sizePolicy)
        thread_name_form.setStyleSheet("QWidget {\n"
                                        "  background-color: #2a1a41;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton {\n"
                                        "  border-radius: 4px;\n"
                                        "  background-color: #8EDBCE;\n"
                                        "  font: \"Roboto Mono\";\n"
                                        "  font-size: 12px;\n"
                                        "  color: black;\n"
                                        "  transition: background-color 1000ms linear;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton:hover {\n"
                                        "  background-color: #CDF9EF;\n"
                                        "}\n"
                                        "\n"
                                        "QLabel {\n"
                                        "  color: #4bd1e8;\n"
                                        "}\n"
                                        "\n"
                                        "QLineEdit {\n"
                                        "  border-radius: 1px;\n"
                                        "  border: 1px solid white;\n"
                                        "  background-color: #4bd1e8\n"
                                        "}\n"
"")
        self.thread_name_box = QtWidgets.QLineEdit(thread_name_form)
        self.thread_name_box.setGeometry(QtCore.QRect(90, 10, 50, 20))
        self.thread_name_box.setObjectName("thread_name_box")
        self.add_thread_name_btn = QtWidgets.QPushButton(thread_name_form)
        self.add_thread_name_btn.setGeometry(QtCore.QRect(10, 40, 130, 25))
        self.add_thread_name_btn.setObjectName("add_thread_name_btn")
        self.add_thread_name_btn.clicked.connect(self.add_event)
        self.input_label = QtWidgets.QLabel(thread_name_form)
        self.input_label.setGeometry(QtCore.QRect(10, 10, 71, 21))
        self.input_label.setObjectName("thread_name_label")

        self.retranslateUi(thread_name_form)
        QtCore.QMetaObject.connectSlotsByName(thread_name_form)

    def retranslateUi(self, thread_name_form):
        _translate = QtCore.QCoreApplication.translate
        thread_name_form.setWindowTitle(_translate("thread_name_form", "Input settings"))
        self.add_thread_name_btn.setText(_translate("thread_name_form", "ADD Thread"))
        self.input_label.setText(_translate("thread_name_form", "Thread name"))

    def add_event(self):
        item = QtWidgets.QListWidgetItem()
        new_thread_name = self.thread_name_box.text()
        item.setText(new_thread_name)
        thread_id = self.main.get_current_thread_id()
        self.main.threads.append({"thread_name": item.text(), "operations_text": [], "operations": []})
        self.main.update_blocks_list()
        self.main.update_thread_list()
        self.main.thread_list.setCurrentItem(self.main.thread_list.item(self.main.thread_list.count() - 1))
        self.thread_name_form.close()
